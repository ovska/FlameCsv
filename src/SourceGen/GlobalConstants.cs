using FlameCsv.SourceGen.Helpers;
using FlameCsv.SourceGen.Models;

namespace FlameCsv.SourceGen;

internal static class GlobalConstants
{
    static GlobalConstants()
    {
        string assemblyName = typeof(GlobalConstants).Assembly.GetName().Name;
        string version = typeof(GlobalConstants).Assembly.GetName().Version.ToString(3);

        GeneratedCodeComment = $"// Generated by {assemblyName} v{version}";
        CodeDomAttribute
            = $"[global::System.CodeDom.Compiler.GeneratedCode({assemblyName.ToStringLiteral()}, {version.ToStringLiteral()})]";
    }

    public static readonly string GeneratedCodeComment;
    public static readonly string CodeDomAttribute;

    public static string GetFileName(string typeName, EquatableArray<NestedType> wrappingTypes)
    {
        using var builder = new ImmutableArrayBuilder<char>();

        foreach (var wrapping in wrappingTypes)
        {
            builder.AddRange(wrapping.Name.AsSpan());
            builder.Add('_');
        }

        builder.AddRange(typeName.AsSpan());
        builder.AddRange(".G.cs".AsSpan());

        return builder.WrittenSpan.ToString();
    }
}
