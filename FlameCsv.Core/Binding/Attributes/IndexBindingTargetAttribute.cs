using System.Reflection;
using CommunityToolkit.Diagnostics;

namespace FlameCsv.Binding.Attributes;

/// <summary>
/// Binds <see cref="MemberName"/> to CSV column at <see cref="Index"/>.
/// Can be used when <see cref="IndexBindingAttribute"/> cannot be used, e.g. on autogenerated partial classes.
/// </summary>
[AttributeUsage(AttributeTargets.Class, AllowMultiple = true)]
public sealed class IndexBindingTargetAttribute : Attribute
{
    /// <summary>CSV column index.</summary>
    public int Index { get; }

    /// <summary>Name of the property or field.</summary>
    public string MemberName { get; }

    /// <inheritdoc cref="IndexBindingTargetAttribute"/>
    /// <param name="index">CSV column index</param>
    /// <param name="memberName">Name of the property or field</param>
    public IndexBindingTargetAttribute(
        int index,
        string memberName)
    {
        Guard.IsGreaterThanOrEqualTo(index, 0);
        Guard.IsNotNullOrWhiteSpace(memberName);
        Index = index;
        MemberName = memberName;
    }

    internal CsvBinding GetAsBinding(Type targetType)
    {
        Guard.IsNotNull(targetType);

        if (targetType.IsInterface)
            ThrowHelper.ThrowNotSupportedException("Interface binding is not yet supported.");

        var member = targetType.GetProperty(MemberName, CsvBindingConstants.MemberLookupFlags)
            ?? (MemberInfo?)targetType.GetField(MemberName, CsvBindingConstants.MemberLookupFlags)
            ?? throw new InvalidOperationException(
                $"Invalid {nameof(IndexBindingTargetAttribute)} definition on type {targetType.Name}: "
                + $"Property/field '{MemberName}' not found");

        return new(Index, member);
    }
}
